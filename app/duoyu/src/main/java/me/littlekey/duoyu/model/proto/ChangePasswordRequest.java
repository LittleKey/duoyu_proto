// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: business/user.proto at 76:1
package me.littlekey.duoyu.model.proto;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class ChangePasswordRequest extends Message<ChangePasswordRequest, ChangePasswordRequest.Builder> {
  public static final ProtoAdapter<ChangePasswordRequest> ADAPTER = new ProtoAdapter_ChangePasswordRequest();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_EMAIL = "";

  public static final String DEFAULT_EMAIL_VERIFICATION_CODE = "";

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String email;

  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String email_verification_code;

  @WireField(
      tag = 3,
      adapter = "me.littlekey.duoyu.model.proto.PrehashedPassword#ADAPTER"
  )
  public final PrehashedPassword password;

  public ChangePasswordRequest(String email, String email_verification_code, PrehashedPassword password) {
    this(email, email_verification_code, password, ByteString.EMPTY);
  }

  public ChangePasswordRequest(String email, String email_verification_code, PrehashedPassword password, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.email = email;
    this.email_verification_code = email_verification_code;
    this.password = password;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.email = email;
    builder.email_verification_code = email_verification_code;
    builder.password = password;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof ChangePasswordRequest)) return false;
    ChangePasswordRequest o = (ChangePasswordRequest) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(email, o.email)
        && Internal.equals(email_verification_code, o.email_verification_code)
        && Internal.equals(password, o.password);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (email != null ? email.hashCode() : 0);
      result = result * 37 + (email_verification_code != null ? email_verification_code.hashCode() : 0);
      result = result * 37 + (password != null ? password.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (email != null) builder.append(", email=").append(email);
    if (email_verification_code != null) builder.append(", email_verification_code=").append(email_verification_code);
    if (password != null) builder.append(", password=").append(password);
    return builder.replace(0, 2, "ChangePasswordRequest{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<ChangePasswordRequest, Builder> {
    public String email;

    public String email_verification_code;

    public PrehashedPassword password;

    public Builder() {
    }

    public Builder email(String email) {
      this.email = email;
      return this;
    }

    public Builder email_verification_code(String email_verification_code) {
      this.email_verification_code = email_verification_code;
      return this;
    }

    public Builder password(PrehashedPassword password) {
      this.password = password;
      return this;
    }

    @Override
    public ChangePasswordRequest build() {
      return new ChangePasswordRequest(email, email_verification_code, password, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_ChangePasswordRequest extends ProtoAdapter<ChangePasswordRequest> {
    ProtoAdapter_ChangePasswordRequest() {
      super(FieldEncoding.LENGTH_DELIMITED, ChangePasswordRequest.class);
    }

    @Override
    public int encodedSize(ChangePasswordRequest value) {
      return (value.email != null ? ProtoAdapter.STRING.encodedSizeWithTag(1, value.email) : 0)
          + (value.email_verification_code != null ? ProtoAdapter.STRING.encodedSizeWithTag(2, value.email_verification_code) : 0)
          + (value.password != null ? PrehashedPassword.ADAPTER.encodedSizeWithTag(3, value.password) : 0)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, ChangePasswordRequest value) throws IOException {
      if (value.email != null) ProtoAdapter.STRING.encodeWithTag(writer, 1, value.email);
      if (value.email_verification_code != null) ProtoAdapter.STRING.encodeWithTag(writer, 2, value.email_verification_code);
      if (value.password != null) PrehashedPassword.ADAPTER.encodeWithTag(writer, 3, value.password);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public ChangePasswordRequest decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.email(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.email_verification_code(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.password(PrehashedPassword.ADAPTER.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public ChangePasswordRequest redact(ChangePasswordRequest value) {
      Builder builder = value.newBuilder();
      if (builder.password != null) builder.password = PrehashedPassword.ADAPTER.redact(builder.password);
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
