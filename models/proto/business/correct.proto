syntax = "proto3";

package duoyu;
option java_package = "online.duoyu.sparkle.model.business";

import "models/proto/model/model.proto";
import "models/proto/common.proto";
import "models/proto/business/public.proto";

message GetCorrectByDiaryIdRequest {
    string diary_id = 1;
}

message GetCorrectByDiaryIdResponse {
    bool success = 1;
    model.Correct correct = 2;
    Errno errno = 3;
    enum Errno {
        UNKNOWN = 0;
        NO_DIARY = 1;
        NO_CORRECT = 2;
    }
}

message CorrectsRequest {
    common.Cursor cursor = 1;
}

message GetCorrectsByUserIdRequest {
    string user_id = 1;
    common.Cursor cursor = 2;
}

message GetCorrectsByDiaryIdRequest {
    string diary_id = 1;
    common.Cursor cursor = 2;
}

message CorrectsResponse {
    repeated model.Correct corrects = 1;
    common.Cursor cursor = 2;
}

message CorrectRequest {
    model.Correct correct = 1;
}

message CorrectResponse {
    bool success = 1;
    Errno errno = 2;
    model.Correct correct = 3;
    enum Errno {
        NOT_FOUND_CORRECT = 0;
        NOT_FOUND_DIARY = 1;
        INVALID_INFO = 2;
        CORRECT_EXISTED = 3;
    }
}

service CorrectService {
    rpc publishedCorrects(CorrectsRequest) returns (CorrectsResponse);
    rpc getCorrectsByUserId(GetCorrectsByUserIdRequest) returns (CorrectsResponse);
    rpc getCorrectsByDiaryId(GetCorrectsByDiaryIdRequest) returns (CorrectsResponse);
    rpc getCorrectByDiaryAndUser(GetCorrectByDiaryIdRequest) returns (GetCorrectByDiaryIdResponse);

    rpc likeCorrect(LikeRequest) returns (LikeResponse);
    rpc unlikeCorrect(UnlikeRequest) returns (UnlikeResponse);

    rpc getCorrectById(CorrectRequest) returns (CorrectResponse);
    rpc putCorrect(CorrectRequest) returns (CorrectResponse);
    rpc deleteCorrect(CorrectRequest) returns (CorrectResponse);
    rpc patchCorrect(CorrectRequest) returns (CorrectResponse);
}
